apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: argomongo
      labels:
        app: mongo
    spec:
      volumes:
        - name: mongostore
          persistentVolumeClaim:
            claimName: mongoback
      containers:
        - name: task-pv-container
          image: mongo:4.2.3
          resources:
            requests:
              memory: "0Gi"
              cpu: "0m"
            limits:
              memory: "8Gi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: "/data/db"
              name: mongostore
          livenessProbe:
            exec:
              command:
              - mongo
              - --eval
              - db.adminCommand('ping')
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: database
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      name: argoredis
      labels:
        app: redis
    spec:
      containers:
        - name: argoredis
          image: argovis/redis:6.2.6
          resources:
            requests:
              memory: "0Mi"
              cpu: "0m"
            limits:
              memory: "500Mi"
              cpu: "250m"
          livenessProbe:
            exec:
              command:
              - redis-cli
              - ping
            initialDelaySeconds: 30
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      name: argoapi
      labels:
        app: api
    spec:
      containers:
        - name: argoapi
          image: argovis/api:2.0.0-rc1
          resources:
            requests:
              memory: "0Gi"
              cpu: "0m"
            limits:
              memory: "4Gi"
              cpu: "2000m"
          livenessProbe:
            httpGet:
              path: /profiles/overview
              port: 8080
              httpHeaders:
              - name: x-argokey
                value: xxx
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  type: NodePort
  selector:
    app: api
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongo-ingress
spec:
  podSelector:
    matchLabels:
      app: mongo
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api
    ports:
      - port: 27017
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-ingress
spec:
  podSelector:
    matchLabels:
      app: redis
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api
    ports:
      - port: 6379
